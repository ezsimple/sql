CREATE PROCEDURE  `SP_STATS_GAME_MONEY`(
    IN $YEAR CHAR(4)
  , IN $TOUR_CODE CHAR(2)
  , IN $ORDER VARCHAR(30)
  , IN $ALIGN VARCHAR(5)
)
BEGIN




    DECLARE $GAME_CODE    VARCHAR(13);
    DECLARE $GAME_NAME    VARCHAR(200);
    DECLARE $GAME_DATE    VARCHAR(13);
    DECLARE $INDEX        INT DEFAULT 0;

    DECLARE $GAME_CURSOR CURSOR FOR
    SELECT GM_CODE, GM_NAME, GM_SDATE
          FROM  CG_GAME_MST
          WHERE SUBSTRING(GM_SDATE,1,4) = $YEAR
          AND GM_TCODE = $TOUR_CODE
          AND GM_MONEY <> 0
          AND GM_MENT <> '99'
    ORDER BY GM_SDATE;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET @FETCH_STATUS := TRUE;

    IF ($ORDER IS NULL) THEN
        SET $ORDER := 'RANK';
    END IF;

    IF ($ALIGN IS NULL) THEN
        SET $ALIGN := 'ASC';
    END IF;


    SET @SQL_SELECT := N'
        SELECT GM_CODE, MM_NAME_DISPLAY, TOTAL_PP_PRIZE, MM_NAT,
            RANK() OVER (ORDER BY TOTAL_PP_PRIZE DESC) AS RANK
            ,TT0.PP_RANK ';

    SET @SQL_FROM = CONCAT(' FROM (
        SELECT T1.GM_CODE, T2.MM_CODE, T2.MM_NAME_DISPLAY, T2.TOTAL_PP_PRIZE, T2.MM_NAT, T2.PP_RANK
        FROM (SELECT GM_CODE, GM_NAME
          FROM  CG_GAME_MST
          WHERE SUBSTRING(GM_SDATE,1,4) = ',$YEAR
          ,' AND GM_TCODE = ',$TOUR_CODE
          ,' AND GM_MONEY <> 0
          AND GM_MENT <> "99" ) T1
        INNER JOIN (
        SELECT
          A.PP_PCODE AS PCODE,
          C.MM_NAME_DISPLAY,
          C.MM_CODE,
          SUM(A.PP_PRIZE) AS TOTAL_PP_PRIZE,
          C.MM_NAT,
          B.GM_CODE,
          A.PP_RANK
          FROM CG_PLAYER_PRIZ A, CG_GAME_MST B, CS_MEMB_MST C, CG_JOIN_PLYR_LST D
          WHERE SUBSTRING(A.PP_CODE,1,4)  = ',$YEAR
          ,' AND SUBSTRING(A.PP_CODE,5,2)  = ',$TOUR_CODE
          ,' AND A.PP_CODE = B.GM_CODE
          AND A.PP_PCODE  = C.MM_CODE
          AND PP_CODE = PL_CODE AND PL_PCODE = PP_PCODE
          AND PL_CPRIZE = "0"
          GROUP BY A.PP_PCODE ,C.MM_NAME_DISPLAY,C.MM_DIV, C.MM_CLSS,C.MM_TOURNUM,C.MM_SEMINUM,C.MM_TECHNUM,C.MM_JUMIN,C.MM_NAT
          ) T2
        ON T1.GM_CODE = T2.GM_CODE
        WHERE LEFT(T1.GM_CODE, 4) = ',$YEAR
        ,' GROUP BY T2.MM_CODE ) TT0 ');


    SET @SQL_WHERE = N'
                 WHERE 1 = 1 ';


    SET @SQL_ORDER := CONCAT('ORDER BY ',$ORDER,' ',$ALIGN);


    SET @SQL_SELECT_CHILD := N'';
    SET @SQL_JOIN_TABLE := N'';

    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
    SET @FETCH_STATUS := FALSE;

    OPEN $GAME_CURSOR;
    read_loop: LOOP
        FETCH NEXT FROM $GAME_CURSOR INTO $GAME_CODE, $GAME_NAME, $GAME_DATE;
        IF @FETCH_STATUS THEN
          LEAVE read_loop;
        END IF;
        SET $INDEX := $INDEX + 1;
        SET @SQL_SELECT_CHILD = CONCAT(@SQL_SELECT_CHILD,' ,TT',$INDEX,'.PP_PRIZE AS PRIZE',$INDEX);
        SET @SQL_JOIN_TABLE = CONCAT(@SQL_JOIN_TABLE,' LEFT JOIN CG_PLAYER_PRIZ TT',$INDEX,'  ON TT',$INDEX,'.PP_PCODE = TT0.MM_CODE  AND TT',$INDEX,'.PP_CODE  = "',$GAME_CODE,'"');
    END LOOP;
    CLOSE $GAME_CURSOR;

    SET @SQL_QUERY = CONCAT(@SQL_SELECT,@SQL_SELECT_CHILD,@SQL_FROM,@SQL_JOIN_TABLE,@SQL_WHERE,@SQL_ORDER);

    PREPARE $QUERY FROM @SQL_QUERY;
    EXECUTE $QUERY;
    DEALLOCATE PREPARE $QUERY;

END;
