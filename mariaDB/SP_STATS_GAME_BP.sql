CREATE PROCEDURE  `SP_STATS_GAME_BP`(
	IN `$YEAR` CHAR(4)
  ,
	IN `$TOUR_CODE` CHAR(2)
  ,
	IN `$ORDER` VARCHAR(30)
  ,
	IN `$ALIGN` VARCHAR(5)

)
BEGIN


    DECLARE $GAME_CODE    VARCHAR(13);
    DECLARE $GAME_NAME    VARCHAR(200);
    DECLARE $GAME_DATE    VARCHAR(13);
    DECLARE $MAN_CODE     VARCHAR(8);
    DECLARE $STA_POINT    INT;
    DECLARE $INDEX        INT DEFAULT 0;


    DECLARE $GAME_CURSOR CURSOR FOR
    SELECT B.GM_CODE, B.GM_NAME, B.GM_SDATE, A.STA_POINT, A.MAN_CODE
         FROM TB_STA_GAME A INNER JOIN CG_GAME_MST B ON A.GAME_CODE = B.GM_CODE
         WHERE B.GM_TCODE = $TOUR_CODE
         AND LEFT(B.GM_CODE, 4) = $YEAR
         GROUP BY B.GM_CODE, B.GM_NAME, B.GM_SDATE
    ORDER BY B.GM_SDATE ASC;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET @FETCH_STATUS := TRUE;

    IF ($ORDER IS NULL) THEN
        SET $ORDER := 'A.BP_RANK';
    END IF;

    IF ($ALIGN IS NULL) THEN
        SET $ALIGN := 'ASC';
    END IF;


    SET @SQL_SELECT := N'
        SELECT A.MAN_CODE
                 , B.MM_NAME AS MM_NAME_DISPLAY
                 , A.RY_POINT
                 , A.BP_RANK
                 , RANK() OVER(ORDER BY CAST(A.BP_RANK AS INT) DESC) AS RANK ';

    SET @SQL_FROM = CONCAT('
              FROM (
                    SELECT B.MAN_CODE, SUM(B.STA_POINT) AS RY_POINT
                         , CAST(SUM(B.STA_POINT_TEMP) AS INT) AS BP_RANK
                      FROM CG_GAME_MST A INNER JOIN TB_STA_GAME B ON A.GM_CODE = B.GAME_CODE
                     WHERE LEFT(B.GAME_CODE, 4) = ',$YEAR
                       ,' GROUP BY B.MAN_CODE
                    ) A INNER JOIN CS_MEMB_MST B
                    ON A.MAN_CODE = B.MM_CODE ');

    SET @SQL_WHERE = N'
                 WHERE 1 = 1 ';


    SET @SQL_ORDER := CONCAT('ORDER BY ',$ORDER,' ',$ALIGN);


    SET @SQL_SELECT_CHILD := N'';
    SET @SQL_JOIN_TABLE := N'';

    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
    SET @FETCH_STATUS := FALSE;

    OPEN $GAME_CURSOR;
    read_loop: LOOP
        FETCH NEXT FROM $GAME_CURSOR INTO $GAME_CODE, $GAME_NAME, $GAME_DATE, $STA_POINT, $MAN_CODE;
        IF @FETCH_STATUS THEN
          LEAVE read_loop;
        END IF;
        SET @SQL_SELECT_CHILD = CONCAT(@SQL_SELECT_CHILD,'  , IFNULL(_',$GAME_CODE,'.STA_POINT, 0) AS STA_POINT',$INDEX);
        SET @SQL_JOIN_TABLE = CONCAT(@SQL_JOIN_TABLE,' LEFT JOIN TB_STA_GAME _',$GAME_CODE
            ,' ON A.MAN_CODE = _',$GAME_CODE,'.MAN_CODE ',' AND _',$GAME_CODE,'.GAME_CODE = ',$GAME_CODE);
        SET $INDEX := $INDEX + 1;
    END LOOP;
    CLOSE $GAME_CURSOR;

    SET @SQL_QUERY = CONCAT(@SQL_SELECT,@SQL_SELECT_CHILD,@SQL_FROM,@SQL_JOIN_TABLE,@SQL_WHERE,@SQL_ORDER);

    PREPARE $QUERY FROM @SQL_QUERY;
    EXECUTE $QUERY;
    DEALLOCATE PREPARE $QUERY;

END;
