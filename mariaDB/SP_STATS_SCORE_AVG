1. 해당년도/투어 에 대한 GM_CODE 커서를 구한다.
SELECT GM_CODE FROM CG_GAME_MST
WHERE SUBSTRING(GM_CODE,1,4)=$YEAR
AND GM_TCODE=$TOUR_CODE
AND SUBSTRING(GM_CODE,13,1) = '0'
AND GM_NAME IS NOT NULL
AND GM_CODE <> '2013200001060'  -- 윈터투어 접수용으로 제외 시킴 LEEJH 20121214
AND GM_CODE <> '2013200001070'  -- 제1회 해피니스 광주은행 오픈 예선전(프로) 접수용 제외 LEEJH 20130402
AND GM_CODE <> '2013200001080'  -- 제1회 해피니스 광주은행 오픈 예선전(아마추어) 접수용 제외 LEEJH 20130402
AND GM_CODE <> '2013200001090'  -- EUROPEAN TOUR KOREAN QUALIFIERS 제외처리 LEEJH 20130523;
;

2. 해당게임에 대한 전체라운드 수
SET @TotalRound = (SELECT gm_round FROM CG_GAME_MST WHERE gm_code= @GAME_CODE )



2. 참조 테이블
CG_HOLE_DIFF.DIFF_DIV(홀별난이도)
'0' : '알바트로스'
'1' : '이글'
'2' : '버디'
'3' : '파'
'4' : '보기'
'5' : '더블보기'
'6' : '트리플'
'7' : '기타'
'8' : '그린적중률'
'9' : '평균퍼트'
'10' : '타수총합'
'11' : '평균타수'
'12' : '퍼트총합'
'13' : '퍼트평균'
'14' : '타수난이도'
'15' : '퍼트난이도
'16' : '홀인원'

게임별
홀별난이도 : http://kgt.co.kr/tournaments/sch_holediff.aspx?game_code=2017110081000

평균타수 exist
SELECT MIN(RG_POINT), AVG(RG_POINT), MAX(RG_POINT)
FROM DR_RCOD_GAME
WHERE RG_CODE=@GAME_CODE AND RG_DIV='01' AND RG_HOLE=@RoundCnt

평균버디수 not exist (버디수)
홀인원 수 exist
알바트로스 exist
이글 수 exist
버디 수 exist
파 수 exist
보기 수 exist
더블 보기수 exist

홀별성적 : http://kgt.co.kr/tournaments/sch_holescore.aspx?game_code=2017110081000
연속 버디수
연속 파수
연속 노보기수

9홀 최저타수
18홀 최저타수
36홀 최저타수
54홀 최저타수
72홀 최저타수
72홀 최저언더파

연속 2개 라운드 최저타수
연속 3개 라운드 최저타수
역대 컷오프 최저타수

CREATE FUNCTION GM_COUNT(
	$YEAR CHAR(4),
	$MM_CODE VARCHAR(10)
) RETURNS SMALLINT CHARSET UTF8
DETERMINISTIC
BEGIN
  DECLARE $GM_COUNT SMALLINT;
  SELECT COUNT(*) INTO $GM_COUNT FROM CG_PLYR_DTL
  WHERE MAN_CD = $MM_CODE
  AND SUBSTRING(GAME_CODE,1,4) = '2016' ;
	RETURN $GM_COUNT;
END;


(SELECT MIN(H01+H02+H03+04+H05+H06+H07+H08+H09) FROM CG_SCOR_MGT_MST WHERE GAME_CODE = "$GM_CODE" AND TOMT_RNGD = "1") AS MIN_H09;
(SELECT MIN(H01+H02+H03+04+H05+H06+H07+H08+H09+H10+H11+H12+H13+H14+H15+H16+H17+H18) FROM CG_SCOR_MGT_MST WHERE GAME_CODE = "$GM_CODE" AND TOMT_RNGD = "1") AS MIN_H18;
(SELECT MIN(H01+H02+H03+04+H05+H06+H07+H08+H09) FROM CG_SCOR_MGT_MST WHERE GAME_CODE = "$GM_CODE") AS MIN_H09;
(SELECT MIN(H01+H02+H03+04+H05+H06+H07+H08+H09) FROM CG_SCOR_MGT_MST WHERE GAME_CODE = "$GM_CODE") AS MIN_H09;
(SELECT MIN(H01+H02+H03+04+H05+H06+H07+H08+H09) FROM CG_SCOR_MGT_MST WHERE GAME_CODE = "$GM_CODE") AS MIN_H09;
(SELECT MIN(H01+H02+H03+04+H05+H06+H07+H08+H09) FROM CG_SCOR_MGT_MST WHERE GAME_CODE = "$GM_CODE") AS MIN_H09;
(SELECT MIN(H01+H02+H03+04+H05+H06+H07+H08+H09) FROM CG_SCOR_MGT_MST WHERE GAME_CODE = "$GM_CODE") AS MIN_H09;

DROP TEMPORARY TABLE IF EXISTS _TMP;
CREATE TEMPORARY TABLE IF NOT EXISTS _TMP (
	MIN_HOLE INT DEFAULT '0' COMMENT '최저타 집계',
	MM_CODE VARCHAR(8) COMMENT '회원코드',
	MM_NAME_DISPLAY VARCHAR(60) COMMENT '이름',
	E_MM_NAME_DISPLAY VARCHAR(60) COMMENT '영문이름'
) COMMENT='최저타 집계 임시 테이블';

INSERT INTO _TMP
SELECT MIN(H01+H02+H03+H04+H05+H06+H07+H08+H09) AS MIN_H09, MAN_CD, MM_NAME_DISPLAY,
CONCAT(B.MM_MNAME,' ',B.MM_LNAME,' ',B.MM_FNAME) AS E_MM_NAME_DISPLAY
FROM CG_SCOR_MGT_MST A INNER JOIN CS_MEMB_MST B ON (MAN_CD = MM_CODE)
WHERE GAME_CODE = $GM_CODE
AND TOMT_RNDG = "1";

INSERT INTO _TMP
SELECT MIN(H10+H11+H12+H13+H14+H15+H16+H17+H18) AS MIN_H09, MAN_CD, MM_NAME_DISPLAY,
CONCAT(B.MM_MNAME,' ',B.MM_LNAME,' ',B.MM_FNAME) AS E_MM_NAME_DISPLAY
FROM CG_SCOR_MGT_MST A INNER JOIN CS_MEMB_MST B ON (MAN_CD = MM_CODE)
WHERE GAME_CODE = $GM_CODE
AND TOMT_RNDG = "1";

INSERT INTO _TMP
SELECT MIN(H01+H02+H03+H04+H05+H06+H07+H08+H09) AS MIN_H09, MAN_CD, MM_NAME_DISPLAY,
CONCAT(B.MM_MNAME,' ',B.MM_LNAME,' ',B.MM_FNAME) AS E_MM_NAME_DISPLAY
FROM CG_SCOR_MGT_MST A INNER JOIN CS_MEMB_MST B ON (MAN_CD = MM_CODE)
WHERE GAME_CODE = $GM_CODE
AND TOMT_RNDG = "2";

INSERT INTO _TMP
SELECT MIN(H10+H11+H12+H13+H14+H15+H16+H17+H18) AS MIN_H09, MAN_CD, MM_NAME_DISPLAY,
CONCAT(B.MM_MNAME,' ',B.MM_LNAME,' ',B.MM_FNAME) AS E_MM_NAME_DISPLAY
FROM CG_SCOR_MGT_MST A INNER JOIN CS_MEMB_MST B ON (MAN_CD = MM_CODE)
WHERE GAME_CODE = $GM_CODE
AND TOMT_RNDG = "2";

INSERT INTO _TMP
SELECT MIN(H01+H02+H03+H04+H05+H06+H07+H08+H09) AS MIN_H09, MAN_CD, MM_NAME_DISPLAY,
CONCAT(B.MM_MNAME,' ',B.MM_LNAME,' ',B.MM_FNAME) AS E_MM_NAME_DISPLAY
FROM CG_SCOR_MGT_MST A INNER JOIN CS_MEMB_MST B ON (MAN_CD = MM_CODE)
WHERE GAME_CODE = $GM_CODE
AND TOMT_RNDG = "3";

INSERT INTO _TMP
SELECT MIN(H10+H11+H12+H13+H14+H15+H16+H17+H18) AS MIN_H09, MAN_CD, MM_NAME_DISPLAY,
CONCAT(B.MM_MNAME,' ',B.MM_LNAME,' ',B.MM_FNAME) AS E_MM_NAME_DISPLAY
FROM CG_SCOR_MGT_MST A INNER JOIN CS_MEMB_MST B ON (MAN_CD = MM_CODE)
WHERE GAME_CODE = $GM_CODE
AND TOMT_RNDG = "3";

INSERT INTO _TMP
SELECT MIN(H01+H02+H03+04+H05+H06+H07+H08+H09) AS MIN_H09, MAN_CD, MM_NAME_DISPLAY,
CONCAT(B.MM_MNAME,' ',B.MM_LNAME,' ',B.MM_FNAME) AS E_MM_NAME_DISPLAY
FROM CG_SCOR_MGT_MST A INNER JOIN CS_MEMB_MST B ON (MAN_CD = MM_CODE)
WHERE GAME_CODE = $GM_CODE
AND TOMT_RNDG = "4";

INSERT INTO _TMP
SELECT MIN(H10+H11+H12+H13+H14+H15+H16+H17+H18) AS MIN_H09, MAN_CD, MM_NAME_DISPLAY,
CONCAT(B.MM_MNAME,' ',B.MM_LNAME,' ',B.MM_FNAME) AS E_MM_NAME_DISPLAY
FROM CG_SCOR_MGT_MST A INNER JOIN CS_MEMB_MST B ON (MAN_CD = MM_CODE)
WHERE GAME_CODE = $GM_CODE
AND TOMT_RNDG = "4";
