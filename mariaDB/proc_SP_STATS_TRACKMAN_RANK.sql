CREATE PROCEDURE SP_STATS_TRACKMAN_RANK()
BEGIN

DECLARE $MM_CODE VARCHAR(10);
DECLARE $MM_CODE_CURSOR CURSOR FOR
SELECT DISTINCT MAN_CD FROM TRACKMAN
WHERE MAN_CD IS NOT NULL;

DECLARE CONTINUE HANDLER FOR NOT FOUND SET @FETCH_STATUS := TRUE;

DROP TABLE IF EXISTS TRACKMAN_RANK;
CREATE TABLE IF NOT EXISTS TRACKMAN_RANK (
  MM_CODE VARCHAR(10) PRIMARY KEY COMMENT '인원코드',
  MM_NAME_DISPLAY VARCHAR(60) COMMENT '표출용 성명',
  E_MM_NAME_DISPLAY VARCHAR(60) COMMENT '영문 표출용 성명',
  RANK_CLUB_SPEED SMALLINT DEFAULT '0' COMMENT '순위 클럽헤드 스피드',
  AVG_CLUB_SPEED FLOAT DEFAULT '0' COMMENT '평균 클럽헤드 스피드',
  RANK_BALL_SPEED SMALLINT DEFAULT '0' COMMENT '순위 볼스피드',
  AVG_BALL_SPEED FLOAT DEFAULT '0' COMMENT '평균 볼스피드',
  RANK_SMASH_FACTOR SMALLINT DEFAULT '0' COMMENT '순위 스매시팩터',
  AVG_SMASH_FACTOR FLOAT DEFAULT '0' COMMENT '평균 스매시팩터',
  RANK_VERT_ANGLE SMALLINT DEFAULT '0' COMMENT '순위 런치앵글',
  AVG_VERT_ANGLE FLOAT DEFAULT '0' COMMENT '평균 런치앵글',
  RANK_SPIN_RATE SMALLINT DEFAULT '0' COMMENT '순위 스핀량',
  AVG_SPIN_RATE FLOAT DEFAULT '0' COMMENT '평균 스핀량',
  RANK_MAX_HEIGHT SMALLINT DEFAULT '0' COMMENT '순위 정점높이',
  AVG_MAX_HEIGHT FLOAT DEFAULT '0' COMMENT '평균 정점높이',
  RANK_FLIGHT_TIME SMALLINT DEFAULT '0' COMMENT '순위 체공시간',
  AVG_FLIGHT_TIME FLOAT DEFAULT '0' COMMENT '평균 체공시간',
  GM_YEAR CHAR(4) COMMENT '대회년도', GM_TCODE CHAR(2) COMMENT '투어코드',
  GM_DIV CHAR(1) COMMENT '공식(0)/비공식(1)',
  PC_GMCNT SMALLINT DEFAULT '0' COMMENT '대회참가수'
) COMMENT='트랙맨 집계 테이블 (자동생성)';
CREATE INDEX TRACKMAN_RANK_IDX0 ON TRACKMAN_RANK (GM_YEAR, GM_TCODE);
CREATE INDEX TRACKMAN_RANK_IDX1 ON TRACKMAN_RANK (RANK_CLUB_SPEED);
CREATE INDEX TRACKMAN_RANK_IDX2 ON TRACKMAN_RANK (RANK_BALL_SPEED);
CREATE INDEX TRACKMAN_RANK_IDX3 ON TRACKMAN_RANK (RANK_SMASH_FACTOR);
CREATE INDEX TRACKMAN_RANK_IDX4 ON TRACKMAN_RANK (RANK_VERT_ANGLE);
CREATE INDEX TRACKMAN_RANK_IDX5 ON TRACKMAN_RANK (RANK_SPIN_RATE);
CREATE INDEX TRACKMAN_RANK_IDX6 ON TRACKMAN_RANK (RANK_MAX_HEIGHT);
CREATE INDEX TRACKMAN_RANK_IDX7 ON TRACKMAN_RANK (RANK_FLIGHT_TIME);

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
SET @FETCH_STATUS := FALSE;

OPEN $MM_CODE_CURSOR;
read_loop: LOOP
    FETCH NEXT FROM $MM_CODE_CURSOR INTO $MM_CODE;
    IF @FETCH_STATUS THEN
      LEAVE read_loop;
    END IF;
    INSERT INTO TRACKMAN_RANK (MM_CODE, MM_NAME_DISPLAY, E_MM_NAME_DISPLAY,
      AVG_CLUB_SPEED, AVG_BALL_SPEED, AVG_SMASH_FACTOR, AVG_VERT_ANGLE,
      AVG_SPIN_RATE, AVG_MAX_HEIGHT, AVG_FLIGHT_TIME,
      GM_YEAR, GM_TCODE, GM_DIV, PC_GMCNT
    )
    SELECT MAN_CD AS MM_CODE,
      MM_NAME_DISPLAY,
      CONCAT(B.MM_MNAME," ",B.MM_LNAME," ",B.MM_FNAME) AS E_MM_NAME_DISPLAY,
      AVG(TR_CLUB_SPEED) AS AVG_CLUB_SPEED,
      AVG(TR_BALL_SPEED) AS AVG_BALL_SPEED,
      AVG(TR_SMASH_FACTOR) AS AVG_SMASH_FACTOR,
      AVG(TR_VERT_ANGLE) AS AVG_VERT_ANGLE,
      AVG(TR_SPIN_RATE) AS AVG_SPIN_RATE,
      AVG(TR_MAX_HEIGHT) AS AVG_MAX_HEIGHT,
      AVG(TR_CF_FLIGHT_TIME) AS AVG_FLIGHT_TIME,
      SUBSTRING(GAME_CODE,1,4) AS GM_YEAR,
      SUBSTRING(GAME_CODE,5,2) AS GM_TCODE,
      SUBSTRING(GAME_CODE,13,1) AS GM_DIV,
      CAST(C.PC_GMCNT AS SIGNED) AS PC_GMCNT
    FROM
      TRACKMAN A
      LEFT JOIN CS_MEMB_MST B ON (MAN_CD = MM_CODE)
      LEFT JOIN CG_PRIZ_RANK_GMCNT C ON (MAN_CD = C.PC_PCODE AND SUBSTRING(A.GAME_CODE,1,4) = C.PC_YEAR AND SUBSTRING(A.GAME_CODE,5,2) = C.PC_TCODE)
    WHERE 1=1
      AND A.MAN_CD = $MM_CODE;
END LOOP;
CLOSE $MM_CODE_CURSOR;

UPDATE TRACKMAN_RANK A
  INNER JOIN (SELECT MM_CODE,
  RANK() OVER (ORDER BY AVG_CLUB_SPEED DESC) AS RANK_CLUB_SPEED,
  RANK() OVER (ORDER BY AVG_BALL_SPEED DESC) AS RANK_BALL_SPEED,
  RANK() OVER (ORDER BY AVG_SMASH_FACTOR DESC) AS RANK_SMASH_FACTOR,
  RANK() OVER (ORDER BY AVG_VERT_ANGLE DESC) AS RANK_VERT_ANGLE,
  RANK() OVER (ORDER BY AVG_SPIN_RATE DESC) AS RANK_SPIN_RATE,
  RANK() OVER (ORDER BY AVG_MAX_HEIGHT DESC) AS RANK_MAX_HEIGHT,
  RANK() OVER (ORDER BY AVG_FLIGHT_TIME DESC) AS RANK_FLIGHT_TIME
  FROM TRACKMAN_RANK) B
  ON (A.MM_CODE = B.MM_CODE)
SET A.RANK_CLUB_SPEED = B.RANK_CLUB_SPEED,
  A.RANK_BALL_SPEED = B.RANK_BALL_SPEED,
  A.RANK_SMASH_FACTOR = B.RANK_SMASH_FACTOR,
  A.RANK_VERT_ANGLE = B.RANK_VERT_ANGLE,
  A.RANK_SPIN_RATE = B.RANK_SPIN_RATE,
  A.RANK_MAX_HEIGHT = B.RANK_MAX_HEIGHT,
  A.RANK_FLIGHT_TIME = B.RANK_FLIGHT_TIME ;

END;
